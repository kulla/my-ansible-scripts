- hosts: main_computer
  roles:
    - screencasts
    - os
    - kulla.neovim
    - kulla.taskwarrior
    - vdirsyncer
    - khal
    - khard
    - asdf
    - docker
    - libvirt
    - gcloud
  tasks:
    - tags: [awesome]
      block:
        - name: Install awesome
          package:
            name:
              - awesome
              - awesome-extra
            state: present

    - tags: [firefox]
      block:
        - name: Install firefox
          package: name=firefox state=present

        - name: Backup firefox's data location
          import_role: name=utils/dobackup
          vars:
            paths:
              - "{{ user.homedir }}/.mozilla/"

    - tags: [keepassxc]
      block:
        - name: Install keepassxc
          package: name=keepassxc state=present

        - name: Backup keepassxc's databases
          import_role: name=utils/dobackup
          vars:
            paths:
              - "{{ user.homedir }}/keepassx/"
            exclude:
              - "keepassx/*.kdb.lock"

    - tags: [media]
      block:
        - name: Install media player and codecs
          package:
            state: present
            name:
              - mplayer
              - ubuntu-restricted-addons
              - libavcodec-extra

        - name: Install tools for editing or creating media files
          package:
            state: present
            name:
              - audacity
              - inkscape
              - gimp
              - scrot
              - imagemagick
              - ffmpeg
              - graphviz
              - xournalpp

    - tags: [neovim]
      block:
        - name: Set default editor to neovim
          blockinfile:
            block: |
              export EDITOR=nvim
              export VISUAL=nvim
            marker_begin: Set default editor BEGIN
            marker_end: Set default editor END
            path: "{{ user.homedir }}/.bashrc"

        - name: Install coc settings file
          copy:
            src: coc-settings.json
            dest: "{{ neovim_config_dir }}"
            owner: "{{ user.name }}"
            group: "{{ user.group }}"
            mode: 0644

        - name: Alias for nvim
          blockinfile:
            block: |
              alias nvim='nvim -p'
            marker_begin: Alias for nvim BEGIN
            marker_end: Alias for nvim END
            path: "{{ user.homedir }}/.bashrc"

    - tags: [openai]
      block:
        - name: Add OPENAI_KEY as env variable
          copy:
            dest: "{{ shell_conf_dir }}/profile/openai-key.sh"
            content: |
              export OPENAI_API_KEY="{{ openai_api_key }}"
            mode: 0555
            owner: "{{ user.name }}"

        - name: Install chatpgt-cli
          command: >
            flatpak-builder --install --force-clean
            --state-dir=/tmp/.flatpak-builder-state-dir
            /tmp/.flatpak-builder-build-dir
            flatpak/com.github.kardolus.chatgpt-cli.yml

        - name: Add alias for chatgpt-cli
          copy:
            dest: "{{ shell_conf_dir }}/bash/chatgpt-cli.sh"
            content: |
              alias chatgpt="flatpak run com.github.kardolus.chatgpt-cli"

        - name: Create configuration directory for chatgpt-cli
          file:
            path: "{{ user.homedir }}/.chatgpt-cli"
            owner: "{{ user.name }}"
            state: directory

        - name: Configure chatgpt-cli
          copy:
            dest: "{{ user.homedir }}/.chatgpt-cli/config.yaml"
            owner: "{{ user.name }}"
            content: |
              model: gpt-4
              max_tokens: 8192

    - tags: [sylpheed]
      block:
        - name: Install sylpheed
          package: name=sylpheed state=present

        - name: Backup sylpheed files
          import_role: name=utils/dobackup
          vars:
            paths:
              - "{{ user.homedir }}/.sylpheed-2.0"
              - "{{ user.homedir }}/Mail"

    - tags: [taskwarrior]
      block:
        - name: Backup taskwarrior's data location
          import_role: name=utils/dobackup
          vars:
            paths:
              - "{{ user.homedir }}/.task"

    - tags: [thunderbird]
      block:
        - name: Install thunderbird
          package: name=thunderbird state=present

        - name: Backup taskwarrior's data location
          import_role: name=utils/dobackup
          vars:
            paths:
              - "{{ user.homedir }}/.thunderbird"

    - tags: [work]
      block:
        - name: Install work tools
          package:
            state: present
            name:
              - gnuplot
              - texlive-latex-recommended
              - texlive-lang-german
              - texlive-publishers
              - texlive-bibtex-extra
              - biber

        - name: Install basic programming tools
          package:
            state: present
            name:
              - make
              - git
              - gource

        - name: Install script "git update-main"
          copy:
            src: git-update-main
            dest: /usr/local/bin
            mode: 0555

        - name: Configure git
          template:
            src: gitconfig
            dest: "{{ user.homedir }}/.gitconfig"
            mode: 0o600
            owner: "{{ user.name }}"
            group: "{{ user.group }}"

        - name: Create global gitignore file
          file:
            path: "{{ git.gitignore.path }}"
            state: touch
            mode: 0o400
            owner: "{{ user.name }}"
            group: "{{ user.group }}"

    - tags: [work, terraform]
      block:
        - name: Add apt-key for hashicorp
          apt_key:
            url: "https://apt.releases.hashicorp.com/gpg"
            state: present

        - name: Add hashicorp repository
          apt_repository:
            repo: deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_lsb.codename }} main
            state: present
            update_cache: true
            filename: hashicorp

        - name: Install terraform-ls
          package:
            name: terraform-ls
            state: present

    - tags: [working-directories]
      block:
        - name: Delete unneeded directores
          file: state=absent path={{ user.homedir }}/{{ item }}
          with_items:
            - Desktop
            - Downloads
            - Videos
            - Pictures
            - Public
            - Templates
            - Music
            - Documents

        - name: Configure working directories
          template:
            src: user-dirs.dirs
            dest: "{{ user.homedir }}/.config/user-dirs.dirs"
            owner: "{{ user.name }}"
            group: "{{ user.group }}"
            mode: 0600

        - name: Create tmpdir on startup and empty it
          cron:
            name: Empty tmpdir of current user
            special_time: reboot
            job: mkdir -p "{{ user.tmpdir }}"; rm -rf "{{ user.tmpdir}}"/*

    - tags: [youtube-dl]
      block:
        - name: Install youtube-dl
          get_url: url=http://yt-dl.org/latest/youtube-dl
            dest=/user/local/bin/youtube-dl
            mode=0755

        - name: Weekly update of youtube-dl
          cron:
            name: update youtube-dl
            job: youtube-dl --update
            special_time: weekly
